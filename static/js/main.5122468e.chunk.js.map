{"version":3,"sources":["Supersonico.js","Login.js","SidebarOption.js","DataLayer.js","Sidebar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","placeholder","type","Avatar","display_name","image","url","SongRow","track","classname","album","images","artists","artist","Body","spotify","discover_weekly","description","fontSize","tracks","item","Footer","token","playing","dispatch","useEffect","getMycurrentPlaybackState","then","r","console","log","is_playing","handlePlayPause","pause","play","class","onClick","skipToNext","getMyCurrentPlayingTrack","Grid","container","spacing","xs","Slider","aria-labelledby","Player","SpotifyWebApi","App","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","getUserPlaylists","getPlaylist","response","state","action","Boolean","hostname","match","ReactDOM","render","StrictMode","top_artists","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5122468e.chunk.js","sourcesContent":["export const authEndpoint =\n\"https://accounts.spotify.com/authorize\";\n\nconst redirectUri = \"https://kevindavis98.github.io/git-prueba/\";\n\nconst clientId = \"bf8ae977c9a949ddb9d6141d4886426c\";\n\nconst scopes = [\n    \"user-read-currently-playing\",\n    \"user-read-recently-played\",\n    \"user-read-playback-state\",\n    \"user-top-read\",\n    \"user-modify-playback-state\"\n];\n\nexport const getTokenFromUrl = () => {\n    return window.location.hash\n        .substring(1)\n        .split('&')\n        .reduce((initial, item) => {\n            let parts = item.split('=');\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n\n            return initial;\n        }, {});\n};\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\n","import React from 'react';\nimport './Login.css';\nimport { loginUrl } from './Supersonico';\n\nfunction Login() {\n    return(\n        <div className=\"login\">\n            <img \n                src=\"SuperLogo.jpg\"\n                alt=\"\"\n            />\n            <a href={loginUrl}>LOGIN WITH SUPERSÃ“NICO</a>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport \"./SidebarOption.css\";\n\nfunction SidebarOption({ title, Icon}){\n    return(\n        <div className=\"sidebarOption\">\n            {Icon && <Icon className=\"sidebarOption__icon\"/> }\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n        </div>\n    )\n}\n\nexport default SidebarOption;\n","import React, { createContext, useContext, useReducer, Children } from \"react\";\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, reducer, children }) => (\n        <DataLayerContext.Provider value ={useReducer(reducer, initialState)}>\n            {children}\n        </DataLayerContext.Provider>\n    );\n\n    export const useDataLayerValue = () => useContext(DataLayerContext);","import React, { useState } from \"react\";\nimport \"./Sidebar.css\";\nimport SidebarOption from './SidebarOption';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport { useDataLayerValue } from \"./DataLayer\";\n\nfunction Sidebar(){\n\n    const[{ playlists }, dispatch] = useDataLayerValue();\n    \n    return(\n        <div className=\"sidebar\">\n            <img \n                className=\"sidebar__logo\" \n                src=\"SuperLogo.jpg\"\n                alt=\"\"\n            />\n            <SidebarOption Icon={HomeIcon} title=\"Home\"/>\n            <SidebarOption Icon={SearchIcon} title=\"Search\"/>\n            <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\"/>\n            \n            <br />\n            <strong className=\"sidebar__title\">\n                PLAYLISTS\n            </strong>\n            <hr/>\n\n            {playlists?.items?.map(playlist =>(\n                <SidebarOption title={playlist.name}/>\n            ))}\n        </div>\n\n    );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./Header.css\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Avatar } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nfunction Header() {\n    const [{ user }, dispatch] = useDataLayerValue();\n\n    return (\n        <div className='header'>\n            <div className=\"header__left\">\n                <SearchIcon />\n                <input placeholder=\"Search for Artists, Songs, Playlists\" type=\"text\"/>\n            </div>\n\n            <div className=\"header__right\">\n                <Avatar alt={user?.display_name} src={user?.image[0]?.url}/>\n                <h4>{user?.display_name}</h4>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Header;","import React from \"react\";\nimport \"./SongRow.css\";\n\nfunction SongRow({track = \"test\"}) {\n    return(\n        <div className=\"songRow\">\n            <img classname=\"songRow__album\" src={track.album.images[0].url} alt=\"\"/>\n            <div className=\"songRow__info\">\n                <h1>{track.name}</h1>\n                <p>\n                    {track.artists.map((artist) => artist.name).join(\", \")}\n                    {track.album.name}\n                </p>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default SongRow;","import React from \"react\";\nimport \"./Body.css\";\nimport Header from \"./Header\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SongRow from \"./SongRow\";\n\nfunction Body({ spotify }){\n    const [{discover_weekly }, dispatch] = useDataLayerValue();\n\n    return (\n        <div className=\"body\">\n            <Header spotify={spotify} />\n            \n            <div className=\"body__info\">\n                <img src={discover_weekly?.images[0].url} alt=\"\"/>\n                <div className=\"body__infoText\">\n                    <strong>PLAYLIST</strong>\n                    <h2>Discover</h2>\n                    <p>{discover_weekly?.description}</p>\n                </div>\n            </div>\n\n            <div className=\"body__songs\">\n                <div className=\"body__icons\">\n                    <PlayCircleFilledIcon className=\"body__shuffle\"/>\n                    <FavoriteIcon fontSize=\"large\" />\n                    <MoreHorizIcon />\n                </div>\n\n                {discover_weekly?.tracks.items.map((item) =>(\n                    <SongRow track={item.track} />\n                ))}\n\n            </div>\n        </div>\n    );\n}\n\nexport default Body;","import React, { useEffect } from 'react'\nimport \"./Footer.css\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport { Grid, Slider } from '@material-ui/core';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport { useDataLayerValue } from './DataLayer';\n\nfunction Footer({ spotify }) {\n    const[{ token, item, playing}, dispatch] = useDataLayerValue();\n\n    useEffect(() => {\n        spotify.getMycurrentPlaybackState(). then((r) => {\n            console.log(r);\n\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: r.is_playing,\n            });\n\n            dispatch({\n                type: \"SET_ITEM\",\n                item: r.item\n            });\n        });\n    }, [spotify]);\n\n    const handlePlayPause = () => {\n        if (playing) {\n            spotify.pause();\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: false\n            });\n        } else {\n            spotify.play();\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n            });\n        }\n    };\n\n    const skipNext = () => {\n        spotify.skipToNext();\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n            dispatch({\n                type: \"SET_ITEM\",\n                item: r.item\n            });\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n            });\n        });\n    };\n\n    const SkipPrevious = () => {\n        spotify.skipToPrevious();\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n            dispatch({\n                type: \"SET_ITEM\",\n                item: r.item\n            });\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n            });\n        });\n    };\n    \n    return (\n        <div className=\"footer\">\n            <div className=\"footer__left\">\n               <img\n                    className=\"footer__albumLogo\"\n                    src={item?.album.images[0].url} \n                    alt={item?.name}\n                /> \n                {item ? (\n                    <div class=\"footer__songInfo\">\n                        <h4>{item.name}</h4>\n                        <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\n                    </div>\n                ) : (\n                    <div className=\"footer_songInfo\">\n                        <h4>No song is playing</h4>\n                        <p>...</p>\n                    </div>\n                )}\n            </div>\n            \n            <div className=\"footer__center\">\n                <ShuffleIcon className=\"footer__green\"/>\n                <SkipPreviousIcon  onClick={skipNext} className=\"footer__icon\"/>\n                {playing ? (\n                    <PauseCircleOutlineIcon\n                        onClick={handlePlayPause}\n                        fontSize=\"large\"\n                        className=\"footer__icon\"\n                    />\n                ) : (\n                    <PlayCircleOutlineIcon\n                        onClick={handlePlayPause}\n                        fontSize=\"large\"\n                        className=\"footer__icon\"\n                    />\n                )}\n                <SkipNextIcon className=\"footer__icon\"/>\n                <LoopIcon className=\"footer__green\"/>\n            </div>\n\n            <div className=\"footer_right\">\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <PlaylistPlayIcon />\n                    </Grid>\n                    <Grid item>\n                        <VolumeDownIcon />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider aria-labelledby=\"continuous-slider\" />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react'\nimport \"./Player.css\";\nimport Sidebar from './Sidebar';\nimport Body from './Body';\nimport Footer from \"./Footer\";\n\n\nfunction Player({ spotify }) {\n    return(\n        <div className=\"player\">\n            <div className=\"player__body\">\n                <Sidebar />\n                <Body spotify={spotify} /> \n            </div>\n            \n            <Footer />\n        </div>\n    )\n}\n\nexport default Player","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromUrl } from './Supersonico';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from './Player';\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\n  const[{ user, token }, dispatch] = useDataLayerValue();\n  \n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token){\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => { \n        dispatch({\n          type: 'SET_USER',\n          user: user,\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) =>{\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists, \n        });\n      });\n\n      spotify.getPlaylist().then(response => \n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n    }\n  }, []);\n  \n  return (\n    // BEM\n    <div className=\"app\">{token ? \n      <Player spotify={spotify} /> : (<Login />)}</div>\n  );\n}\n\nexport default App;\n","import { findAllByDisplayValue } from \"@testing-library/react\";\n\nexport const initialState = {\n    user: null,\n    playlists: [],\n    spotify: null,\n    discover_weekly: null,\n    top_artists: null,\n    playing: false,\n    item: null,\n    token: null,\n};\n\nconst reducer = (state, action) =>{\n    \n    console.log(action);\n\n    switch(action.type)Â {\n        case \"SET_USER\":\n            return {\n                ...state,\n                user: action.user\n            };\n        \n        case \"SET_PLAYING\":\n            return {\n                ...state,\n                playing: action.playing,\n            };\n\n        case \"SET_ITEM\":\n            return {\n                ...state,\n                item: action.item,\n            };\n\n        case \"SET_TOKEN\":\n            return {\n                ...state,\n                token: action.token,\n            };\n        \n            case 'SET_PLAYLISTS':\n                return {\n                    ...state,\n                    playlists: action.playlists,\n                };\n\n            case 'SET_DISCOVER_WEEKLY':\n                return {\n                    ...state,\n                    discover_weekly: action.discover_weekly,\n                };\n            \n            case \"SET_SPOTIFY\":\n                return {\n                    ...state,\n                    spotify: action.spotify,\n                };\n        \n            default:\n            return state;\n    }\n};\n\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { DataLayer } from \"./DataLayer\";\nimport reducer, { initialState } from './reducer';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer ={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}