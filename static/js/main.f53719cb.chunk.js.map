{"version":3,"sources":["Supersonico.js","Login.js","SidebarOption.js","DataLayer.js","Sidebar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","console","log","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","spotify","user","placeholder","type","Avatar","display_name","image","url","SongRow","track","playSong","onClick","id","classname","album","images","artists","artist","Body","discover_weekly","dispatch","play","uris","then","res","getMyCurrentPlayingTrack","r","item","playing","description","context_uri","fontSize","tracks","Footer","token","useEffect","getMycurrentPlaybackState","is_playing","handlePlayPause","pause","class","skipToNext","skipToPrevious","Grid","container","spacing","xs","Slider","aria-labelledby","Player","SpotifyWebApi","App","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getPlaylist","response","getMyTopArtists","top_artists","getMe","getUserPlaylists","state","action","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"+aA0BaA,G,cAAQ,UA1BO,yCA0BP,sBAtBJ,mCAsBI,yBAxBD,6CAwBC,kBApBN,CACX,8BACA,4BACA,2BACA,gBACA,8BAesGC,KAAK,OAA1F,0CCVNC,MAZf,WACI,OACI,yBAAKC,UAAU,SACX,yBACIC,IAAI,gBACJC,IAAI,KAER,uBAAGC,KAAMN,GAAT,+B,uCCCGO,MATf,YAAuC,IAAdC,EAAa,EAAbA,MAAOC,EAAM,EAANA,KAC5B,OACI,yBAAKN,UAAU,iBACVM,GAAQ,kBAACA,EAAD,CAAMN,UAAU,wBACxBM,EAAO,4BAAKD,GAAc,2BAAIA,K,qDCL9BE,EAAmBC,0BAEnBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,SAA1B,OACrB,kBAACL,EAAiBM,SAAlB,CAA2BC,MAAQC,qBAAWJ,EAASD,IAClDE,IAIII,EAAoB,kBAAMC,qBAAWV,ICuBnCW,MAxBf,WAAoB,IAAD,IACkBF,IADlB,mBACPG,EADO,KACPA,UAGR,OAJe,KAEfC,QAAQC,IAAIF,GAGR,yBAAKnB,UAAU,WACX,yBACIA,UAAU,gBACVC,IAAI,gBACJC,IAAI,KAER,kBAAC,EAAD,CAAeI,KAAMgB,IAAUjB,MAAM,SACrC,kBAAC,EAAD,CAAeC,KAAMiB,IAAYlB,MAAM,WACvC,kBAAC,EAAD,CAAeC,KAAMkB,IAAkBnB,MAAM,iBAC7C,6BACA,4BAAQL,UAAU,kBAAlB,aACA,6BAXJ,OAYKmB,QAZL,IAYKA,GAZL,UAYKA,EAAWM,aAZhB,aAYK,EAAkBC,KAAI,SAACC,GAAD,OACnB,kBAAC,EAAD,CAAetB,MAAOsB,EAASC,Y,yBCFhCC,MAlBf,YAA6B,EAAXC,QAAY,IAAD,IACId,IADJ,mBAChBe,EADgB,KAChBA,KAET,OAHyB,KAIrB,yBAAK/B,UAAU,UACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,MACA,2BAAOgC,YAAY,uCAAuCC,KAAK,UAGnE,yBAAKjC,UAAU,iBACX,kBAACkC,EAAA,EAAD,CAAQhC,IAAG,OAAE6B,QAAF,IAAEA,OAAF,EAAEA,EAAMI,aAAclC,IAAG,OAAE8B,QAAF,IAAEA,GAAF,UAAEA,EAAMK,MAAM,UAAd,aAAE,EAAgBC,MACtD,mCAAKN,QAAL,IAAKA,OAAL,EAAKA,EAAMI,iB,6DCAZG,MAhBf,YAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAErB,OADApB,QAAQC,IAAIkB,GAER,yBAAKvC,UAAU,UAAUyC,QAAS,kBAAMD,EAASD,EAAMG,MACnD,yBAAKC,UAAU,iBAAiB1C,IAAKsC,EAAMK,MAAMC,OAAO,GAAGR,IAAKnC,IAAI,KACpE,yBAAKF,UAAU,iBACX,4BAAKuC,EAAMX,MACX,2BACKW,EAAMO,QAAQpB,KAAI,SAACqB,GAAD,OAAYA,EAAOnB,QAAM9B,KAAK,MADrD,KAC8D,IACzDyC,EAAMK,MAAMhB,SCuElBoB,MA1Ef,YAA2B,IAAXlB,EAAU,EAAVA,QAAU,EACiBd,IADjB,mBACdiC,EADc,KACdA,gBAAmBC,EADL,KAsBhBV,EAAW,SAACE,GACdZ,EACKqB,KAAK,CACFC,KAAM,CAAC,iBAAD,OAAkBV,MAE3BW,MAAK,SAACC,GACHxB,EAAQyB,2BAA2BF,MAAK,SAACG,GACrCN,EAAU,CACNjB,KAAM,WACNwB,KAAMD,EAAEC,OAEZP,EAAS,CACLjB,KAAK,cACLyB,SAAS,WAO7B,OACI,yBAAK1D,UAAU,QACX,kBAAC,EAAD,CAAQ8B,QAASA,IAEjB,yBAAK9B,UAAU,cACX,yBAAKC,IAAG,OAAEgD,QAAF,IAAEA,OAAF,EAAEA,EAAiBJ,OAAO,GAAGR,IAAKnC,IAAI,KAC9C,yBAAKF,UAAU,kBACX,4CACA,+CACA,kCAAIiD,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBU,eAI7B,yBAAK3D,UAAU,eACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CACIA,UAAU,gBACVyC,QAxDC,SAACC,GAClBZ,EACKqB,KAAK,CACFS,YAAY,4CAEfP,MAAK,SAACC,GACHxB,EAAQyB,2BAA2BF,MAAK,SAACG,GACrCN,EAAS,CACLjB,KAAM,WACNwB,KAAMD,EAAEC,OAEZP,EAAS,CACLjB,KAAM,cACNyB,SAAS,aA6Cb,kBAAC,IAAD,CAAcG,SAAS,UACvB,kBAAC,IAAD,OAPR,OAUKZ,QAVL,IAUKA,OAVL,EAUKA,EAAiBa,OAAOrC,MAAMC,KAAI,SAAC+B,GAAD,OAC/B,kBAAC,EAAD,CAASjB,SAAUA,EAAUD,MAAOkB,EAAKlB,c,2KC2D9CwB,MAzHf,YAA8B,IAAZjC,EAAW,EAAXA,QAAW,EACkBd,IADlB,0BACVyC,GADU,EACjBO,MADiB,EACVP,MAAMC,EADI,EACJA,QAAUR,EADN,KAGzBe,qBAAU,WACNnC,EAAQoC,4BAA4Bb,MAAK,SAACG,GACtCpC,QAAQC,IAAImC,GAEZN,EAAS,CACLjB,KAAM,cACNyB,QAASF,EAAEW,aAGfjB,EAAS,CACLjB,KAAM,WACNwB,KAAMD,EAAEC,YAGjB,CAAC3B,IAEJ,IAAMsC,EAAkB,WAChBV,GACA5B,EAAQuC,QACRnB,EAAS,CACLjB,KAAM,cACNyB,SAAS,MAGb5B,EAAQqB,OACRD,EAAS,CACLjB,KAAM,cACNyB,SAAS,MAiCrB,OACI,yBAAK1D,UAAU,UACX,yBAAKA,UAAU,gBACZ,yBACKA,UAAU,oBACVC,IAAG,OAAEwD,QAAF,IAAEA,OAAF,EAAEA,EAAMb,MAAMC,OAAO,GAAGR,IAC3BnC,IAAG,OAAEuD,QAAF,IAAEA,OAAF,EAAEA,EAAM7B,OAEd6B,EACG,yBAAKa,MAAM,oBACP,4BAAKb,EAAK7B,MACV,2BAAI6B,EAAKX,QAAQpB,KAAI,SAACqB,GAAD,OAAYA,EAAOnB,QAAM9B,KAAK,QAGvD,yBAAKE,UAAU,mBACX,kDACA,oCAKZ,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CAAaA,UAAU,kBACvB,kBAAC,IAAD,CAAmByC,QAnDd,WACbX,EAAQyC,aACRzC,EAAQyB,2BAA2BF,MAAK,SAACG,GACrCN,EAAS,CACLjB,KAAM,WACNwB,KAAMD,EAAEC,OAEZP,EAAS,CACLjB,KAAM,cACNyB,SAAS,QA0C6B1D,UAAU,iBAC/C0D,EACG,kBAAC,IAAD,CACIjB,QAAS2B,EACTP,SAAS,QACT7D,UAAU,iBAGd,kBAAC,IAAD,CACIyC,QAAS2B,EACTP,SAAS,QACT7D,UAAU,iBAGlB,kBAAC,IAAD,CAAcyC,QAnDL,WACjBX,EAAQ0C,iBACR1C,EAAQyB,2BAA2BF,MAAK,SAACG,GACrCN,EAAS,CACLjB,KAAM,WACNwB,KAAMD,EAAEC,OAEZP,EAAS,CACLjB,KAAM,cACNyB,SAAS,QA0C4B1D,UAAU,iBAC/C,kBAAC,IAAD,CAAUA,UAAU,mBAGxB,yBAAKA,UAAU,gBACX,kBAACyE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMhB,MAAI,GACN,kBAAC,IAAD,OAEJ,kBAACgB,EAAA,EAAD,CAAMhB,MAAI,GACN,kBAAC,IAAD,OAEJ,kBAACgB,EAAA,EAAD,CAAMhB,MAAI,EAACmB,IAAE,GACT,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,2BC3GjCC,MAZf,YAA8B,IAAZjD,EAAW,EAAXA,QACd,OACI,yBAAK9B,UAAU,UACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAM8B,QAASA,KAEnB,kBAAC,EAAD,CAAQA,QAASA,MCNvBA,EAAU,IAAIkD,IA+DLC,OA7Df,WAAgB,IAAD,EAEgBjE,IAFhB,mBAELgD,EAFK,KAELA,MAASd,EAFJ,KAqDb,OAjDAe,qBAAU,WAER,IAAMiB,EVDCC,OAAOC,SAASF,KAClBG,UAAU,GACVC,MAAM,KACNC,QAAO,SAACC,EAAS/B,GACd,IAAIgC,EAAQhC,EAAK6B,MAAM,KAGvB,OAFAE,EAAQC,EAAM,IAAMC,mBAAmBD,EAAM,IAEtCD,IACR,IUNPL,OAAOC,SAASF,KAAO,GACvB,IAAIS,EAAST,EAAKU,aAEdD,IACF7D,EAAQ+D,eAAeF,GAEvBzC,EAAS,CACPjB,KAAM,YACN+B,MAAO2B,IAGT7D,EAAQgE,YAAY,0BAA0BzC,MAAK,SAAC0C,GAAD,OACjD7C,EAAS,CACPjB,KAAM,sBACNgB,gBAAiB8C,OAIrBjE,EAAQkE,kBAAkB3C,MAAK,SAAC0C,GAAD,OAC7B7C,EAAS,CACPjB,KAAK,kBACLgE,YAAYF,OAIhB7C,EAAS,CACPjB,KAAM,cACNH,QAASA,IAGXA,EAAQoE,QAAQ7C,MAAK,SAACtB,GACpBmB,EAAS,CACPjB,KAAM,WACNF,KAAMA,OAIVD,EAAQqE,mBAAmB9C,MAAK,SAAClC,GAC/B+B,EAAS,CACPjB,KAAM,gBACNd,UAAWA,UAIhB,CAAC6C,EAAOd,IAGT,yBAAKlD,UAAU,QACXgE,GAAS,kBAAC,EAAD,MACVA,GAAS,kBAAC,EAAD,CAAQlC,QAASA,M,QCIlBnB,I,OAzDC,SAACyF,EAAOC,GAEpB,OADAjF,QAAQC,IAAIgF,GACLA,EAAOpE,MACV,IAAK,WACD,OAAO,6BACAmE,GADP,IAEIrE,KAAMsE,EAAOtE,OAGrB,IAAK,cACD,OAAO,6BACAqE,GADP,IAEI1C,QAAS2C,EAAO3C,UAGxB,IAAK,WACD,OAAO,6BACA0C,GADP,IAEI3C,KAAM4C,EAAO5C,OAGrB,IAAK,sBACD,OAAO,6BACA2C,GADP,IAEInD,gBAAiBoD,EAAOpD,kBAGhC,IAAK,kBACD,OAAO,6BACAmD,GADP,IAEIH,YAAaI,EAAOJ,cAG5B,IAAK,YACD,OAAO,6BACAG,GADP,IAEIpC,MAAOqC,EAAOrC,QAGtB,IAAK,cACD,OAAO,6BACAoC,GADP,IAEItE,QAASuE,EAAOvE,UAIvB,IAAK,gBACF,OAAO,6BACAsE,GADP,IAEIjF,UAAWkF,EAAOlF,YAG1B,QACI,OAAOiF,KCtDCE,QACW,cAA7BnB,OAAOC,SAASmB,UAEe,UAA7BpB,OAAOC,SAASmB,UAEhBpB,OAAOC,SAASmB,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAWjG,aFTa,CACxBqB,KAAM,KACNZ,UAAW,GACXW,QAAS,KACTmB,gBAAiB,KACjBgD,YAAa,KACbvC,SAAS,EACTD,KAAM,KACNO,MAAO,MECgCrD,QAAUA,IAC/C,kBAAC,GAAD,QAGJiG,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3D,MAAK,SAAA4D,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhG,QAAQgG,MAAMA,EAAMC,c","file":"static/js/main.f53719cb.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\nconst redirectUri = \"https://kevindavis98.github.io/git-prueba/\";\n\nconst clientId = \"bf8ae977c9a949ddb9d6141d4886426c\";\n\nconst scopes = [\n    \"user-read-currently-playing\",\n    \"user-read-recently-played\",\n    \"user-read-playback-state\",\n    \"user-top-read\",\n    \"user-modify-playback-state\"\n];\n\nexport const getTokenFromUrl = () => {\n    return window.location.hash\n        .substring(1)\n        .split('&')\n        .reduce((initial, item) => {\n            let parts = item.split('=');\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n\n            return initial;\n        }, {});\n};\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport \"./Login.css\";\nimport { loginUrl } from \"./Supersonico\";\n\nfunction Login() {\n    return(\n        <div className=\"login\">\n            <img \n                src=\"SuperLogo.jpg\"\n                alt=\"\"\n            />\n            <a href={loginUrl}>LOGIN WITH SUPERSÃ“NICO</a>\n        </div>\n    );\n}\n\nexport default Login;","import React from \"react\";\nimport \"./SidebarOption.css\";\n\nfunction SidebarOption({ title, Icon}){\n    return(\n        <div className=\"sidebarOption\">\n            {Icon && <Icon className=\"sidebarOption__icon\"/> }\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n        </div>\n    );\n}\n\nexport default SidebarOption;\n","import React, { createContext, useContext, useReducer, Children } from \"react\";\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, reducer, children }) => (\n    <DataLayerContext.Provider value ={useReducer(reducer, initialState)}>\n        {children}\n    </DataLayerContext.Provider>\n);\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);\n","import React from \"react\";\nimport \"./Sidebar.css\";\nimport SidebarOption from './SidebarOption';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport { useDataLayerValue } from \"./DataLayer\";\nimport { getTokenFromResponse } from \"./Supersonico\";\n\nfunction Sidebar() {\n    const[{ playlists }, dispatch] = useDataLayerValue();\n    console.log(playlists);\n\n    return(\n        <div className=\"sidebar\">\n            <img \n                className=\"sidebar__logo\" \n                src=\"SuperLogo.jpg\"\n                alt=\"\"\n            />\n            <SidebarOption Icon={HomeIcon} title=\"Home\"/>\n            <SidebarOption Icon={SearchIcon} title=\"Search\"/>\n            <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\"/>\n            <br />\n            <strong className=\"sidebar__title\">PLAYLISTS</strong>\n            <hr/>\n            {playlists?.items?.map((playlist) => (\n                <SidebarOption title={playlist.name}/>\n            ))}\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./Header.css\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Avatar } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport { useEffect } from \"react\";\n\nfunction Header( {spotify} ) {\n    const [{ user }, dispatch] = useDataLayerValue();\n\n    return (\n        <div className='header'>\n            <div className=\"header__left\">\n                <SearchIcon />\n                <input placeholder=\"Search for Artists, Songs, Playlists\" type=\"text\"/>\n            </div>\n\n            <div className=\"header__right\">\n                <Avatar alt={user?.display_name} src={user?.image[0]?.url}/>\n                <h4>{user?.display_name}</h4>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./SongRow.css\";\n\nfunction SongRow({track, playSong}) {\n    console.log(track)\n    return(\n        <div className=\"songRow\" onClick={() => playSong(track.id)}>\n            <img classname=\"songRow__album\" src={track.album.images[0].url} alt=\"\"/>\n            <div className=\"songRow__info\">\n                <h1>{track.name}</h1>\n                <p>\n                    {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n                    {track.album.name}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default SongRow;","import React from \"react\";\nimport \"./Body.css\";\nimport Header from \"./Header\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SongRow from \"./SongRow\";\n\nfunction Body({ spotify }){\n    const [{discover_weekly }, dispatch] = useDataLayerValue();\n\n    const playPlaylist = (id) => {\n        spotify\n            .play({\n                context_uri: `spotify:playlist:37i9dQZEVXcNnhZ8AVJEGj`,\n            })\n            .then((res) => {\n                spotify.getMyCurrentPlayingTrack().then((r) => {\n                    dispatch({\n                        type: \"SET_ITEM\",\n                        item: r.item,\n                    });\n                    dispatch({\n                        type: \"SET_PLAYING\",\n                        playing: true,\n                    });\n                });\n            });\n    };\n\n    const playSong = (id) => {\n        spotify\n            .play({\n                uris: [`spotify:track:${id}`],\n            })\n            .then((res) => {\n                spotify.getMyCurrentPlayingTrack().then((r) => {\n                    dispatch ({\n                        type: \"SET_ITEM\",\n                        item: r.item,\n                    });\n                    dispatch({\n                        type:\"SET_PLAYING\",\n                        playing: true,\n                    });\n                });\n            });\n\n    };\n\n    return (\n        <div className=\"body\">\n            <Header spotify={spotify} />\n            \n            <div className=\"body__info\">\n                <img src={discover_weekly?.images[0].url} alt=\"\"/>\n                <div className=\"body__infoText\">\n                    <strong>PLAYLIST</strong>\n                    <h2>Discover Weekly</h2>\n                    <p>{discover_weekly?.description}</p>\n                </div>\n            </div>\n\n            <div className=\"body__songs\">\n                <div className=\"body__icons\">\n                    <PlayCircleFilledIcon \n                        className=\"body__shuffle\"\n                        onClick={playPlaylist}\n                    />\n                    <FavoriteIcon fontSize=\"large\" />\n                    <MoreHorizIcon />\n                </div>\n\n                {discover_weekly?.tracks.items.map((item) =>(\n                    <SongRow playSong={playSong} track={item.track} />\n                ))}\n\n            </div>\n        </div>\n    );\n}\n\nexport default Body;","import React, { useEffect } from 'react'\nimport \"./Footer.css\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport { Grid, Slider } from '@material-ui/core';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport { useDataLayerValue } from './DataLayer';\n\nfunction Footer({ spotify }) {\n    const[{ token, item, playing}, dispatch] = useDataLayerValue();\n\n    useEffect(() => {\n        spotify.getMycurrentPlaybackState().then((r) => {\n            console.log(r);\n\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: r.is_playing,\n            });\n\n            dispatch({\n                type: \"SET_ITEM\",\n                item: r.item\n            });\n        });\n    }, [spotify]);\n\n    const handlePlayPause = () => {\n        if (playing) {\n            spotify.pause();\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: false\n            });\n        } else {\n            spotify.play();\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n            });\n        }\n    };\n\n    const skipNext = () => {\n        spotify.skipToNext();\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n            dispatch({\n                type: \"SET_ITEM\",\n                item: r.item\n            });\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n            });\n        });\n    };\n\n    const skipPrevious = () => {\n        spotify.skipToPrevious();\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n            dispatch({\n                type: \"SET_ITEM\",\n                item: r.item,\n            });\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n            });\n        });\n    };\n    \n    return (\n        <div className=\"footer\">\n            <div className=\"footer__left\">\n               <img\n                    className=\"footer__albumLogo\"\n                    src={item?.album.images[0].url} \n                    alt={item?.name}\n                /> \n                {item ? (\n                    <div class=\"footer__songInfo\">\n                        <h4>{item.name}</h4>\n                        <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\n                    </div>\n                ) : (\n                    <div className=\"footer_songInfo\">\n                        <h4>No song is playing</h4>\n                        <p>...</p>\n                    </div>\n                )}\n            </div>\n            \n            <div className=\"footer__center\">\n                <ShuffleIcon className=\"footer__green\"/>\n                <SkipPreviousIcon  onClick={skipNext} className=\"footer__icon\"/>\n                {playing ? (\n                    <PauseCircleOutlineIcon\n                        onClick={handlePlayPause}\n                        fontSize=\"large\"\n                        className=\"footer__icon\"\n                    />\n                ) : (\n                    <PlayCircleOutlineIcon\n                        onClick={handlePlayPause}\n                        fontSize=\"large\"\n                        className=\"footer__icon\"\n                    />\n                )}\n                <SkipNextIcon onClick={skipPrevious} className=\"footer__icon\" />\n                <LoopIcon className=\"footer__green\"/>\n            </div>\n\n            <div className=\"footer_right\">\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <PlaylistPlayIcon />\n                    </Grid>\n                    <Grid item>\n                        <VolumeDownIcon />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider aria-labelledby=\"continuous-slider\" />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./Player.css\";\nimport Sidebar from \"./Sidebar\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\n\n\nfunction Player({ spotify }) {\n    return(\n        <div className=\"player\">\n            <div className=\"player__body\">\n                <Sidebar />\n                <Body spotify={spotify} /> \n            </div>\n            <Footer spotify={spotify} />\n        </div>\n    );\n}\n\nexport default Player;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromUrl } from './Supersonico';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from './Player';\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\n  const[{ token }, dispatch] = useDataLayerValue();\n  \n  useEffect(() => {\n\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token){\n      spotify.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.getPlaylist(\"37i9dQZEVXcNnhZ8AVJEGj\").then((response) => \n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n\n      spotify.getMyTopArtists().then((response) =>\n        dispatch({\n          type:\"SET_TOP_ARTISTS\",\n          top_artists:response\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify,\n      });\n      \n      spotify.getMe().then((user) => { \n        dispatch({\n          type: 'SET_USER',\n          user: user,\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) =>{\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists, \n        });\n      });\n    }\n  }, [token, dispatch]);\n  \n  return (\n    <div className=\"app\">\n      {!token && <Login />} \n      {token && <Player spotify={spotify} />}\n    </div> \n  );\n}\n\nexport default App;\n","import { findAllByDisplayValue } from \"@testing-library/react\";\n\nexport const initialState = {\n    user: null,\n    playlists: [],\n    spotify: null,\n    discover_weekly: null,\n    top_artists: null,\n    playing: false,\n    item: null,\n    token: null,\n};\n\nconst reducer = (state, action) =>{\n    console.log(action);\n    switch(action.type)Â {\n        case \"SET_USER\":\n            return {\n                ...state,\n                user: action.user\n            };\n        \n        case \"SET_PLAYING\":\n            return {\n                ...state,\n                playing: action.playing,\n            };\n\n        case \"SET_ITEM\":\n            return {\n                ...state,\n                item: action.item,\n            };\n        \n        case 'SET_DISCOVER_WEEKLY':\n            return {\n                ...state,\n                discover_weekly: action.discover_weekly,\n            };\n\n        case \"SET_TOP_ARTISTS\":\n            return {\n                ...state,\n                top_artists: action.top_artists,\n            }\n\n        case \"SET_TOKEN\":\n            return {\n                ...state,\n                token: action.token,\n            };\n        \n        case \"SET_SPOTIFY\":\n            return {\n                ...state,\n                spotify: action.spotify,\n             };\n        \n        \n         case 'SET_PLAYLISTS':\n            return {\n                ...state,\n                playlists: action.playlists,\n            };\n        \n        default:\n            return state;\n    }\n};\n\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { DataLayer } from \"./DataLayer\";\nimport reducer, { initialState } from './reducer';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer ={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}